{"version":3,"sources":["components/Checker.jsx","components/PlayableSquare.jsx","styles/boardStyles.js","components/Board.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Checker","resetHighlighted","color","style","counter","row","col","showSquares","currMove","useDrag","item","type","collect","monitor","isDragging","begin","end","drag","ref","backgroundColor","opacity","id","PlayableSquare","children","highlighted","moveCurr","resetSquare","switchTurns","useDrop","accept","canDrop","drop","props","isOver","BoardGrid","styled","div","nonPlayableSquareStyle","border","playableSquareStyle","checkerStyle","borderRadius","position","height","width","top","left","cursor","boxShadow","transform","initialBoard","makeHighlighted","Board","state","selectedColor","selectedRow","selectedCol","board","makeAutoMove","b","maxMoveLength","maxMove","maxStartRow","maxStartCol","moves","getMoves","push","getJumps","forEach","move","r","c","length","Math","abs","setLocation","setState","setTimeout","setBoard","val","parseInt","newArray","i","slice","getCaptured","startRow","startCol","endRow","endCol","piece","colorMap","black","red","resetHiglighted","isInBounds","direction","oponnent","dfsUtil","jumped","jRow","jCol","lRow","lCol","ans","found","captured","pop","makeBoard","blackCounter","redCounter","retVal","squareState","key","checkerColor","this","React","Component","App","backend","HTML5Backend","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.966258b2.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDrag } from \"react-dnd\";\n\nconst Checker = ({\n  resetHighlighted,\n  color,\n  style,\n  counter,\n  row,\n  col,\n  showSquares,\n  currMove\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: \"checker\"},\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    }),\n    begin: monitor => showSquares({ color, col, row }),\n    end: monitor => resetHighlighted()\n  });\n  return (\n    <div\n      ref={drag}\n      style={{\n        ...style,\n        backgroundColor: color,\n        opacity: isDragging ? 0.5 : 1\n      }}\n      id={[color, counter]}\n    ></div>\n  );\n};\nexport default Checker;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\n\nconst PlayableSquare = ({\n  style,\n  children,\n  row,\n  col,\n  highlighted,\n  moveCurr,\n  resetSquare,\n  resetHighlighted,\n  switchTurns\n}) => {\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: \"checker\",\n    canDrop: () => highlighted == 1,\n    drop: (item, monitor) => {\n      moveCurr({ row, col })\n      resetSquare({ row, col })\n      resetHighlighted()\n      switchTurns()\n    },\n    collect: (monitor, props) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n  return (\n    <div\n      ref={drop}\n      style={{\n        ...style,\n        backgroundColor:\n          (isOver && !canDrop && \"red\") ||\n          (!isOver && canDrop && \"yellow\") ||\n          (isOver && canDrop && \"green\") ||\n          \"black\"\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default PlayableSquare;\n","import styled from \"styled-components\";\n\nexport const BoardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(8, 12vmin);\n  grid-template-rows: repeat(8, 12vmin);\n  height: 100vh;\n`;\n\nexport const nonPlayableSquareStyle = {\n    backgroundColor: \"red\",\n    border: \"1px yellow solid\"\n};\n\nexport const playableSquareStyle = {\n    backgroundColor: \"black\",\n    border: \"1px yellow solid\"\n};\n\nexport const checkerStyle = {\n    borderRadius: \"50%\",\n    position: \"relative\",\n    height: \"90%\",\n    width: \"90%\",\n    top: \"5%\",\n    left: \"5%\",\n    cursor: \"pointer\",\n    boxShadow: \"inset 0 0 20px white\",\n    opacity: \"99%\",\n    transform: 'translate(0, 0)'\n};","import React from \"react\";\nimport Checker from \"./Checker\";\nimport PlayableSquare from \"./PlayableSquare\";\nimport {\n  nonPlayableSquareStyle,\n  playableSquareStyle,\n  checkerStyle,\n  BoardGrid\n} from \"../styles/boardStyles\";\n\nlet initialBoard = [\n  [-1, 1, -1, 1, -1, 1, -1, 1],\n  [1, -1, 1, -1, 1, -1, 1, -1],\n  [-1, 1, -1, 1, -1, 1, -1, 1],\n  [0, -1, 0, -1, 0, -1, 0, -1],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n  [2, -1, 2, -1, 2, -1, 2, -1],\n  [-1, 2, -1, 2, -1, 2, -1, 2],\n  [2, -1, 2, -1, 2, -1, 2, -1]\n];\n\nlet makeHighlighted = () => [\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0]\n];\n\nclass Board extends React.Component {\n\n  state = {\n    highlighted: makeHighlighted(),\n    selectedColor: null,\n    selectedRow: null,\n    selectedCol: null,\n    currMove: \"black\",\n    board: initialBoard\n  };\n\n  makeAutoMove = () => {\n    const color = \"red\"\n    const b = this.state.board\n    var maxMoveLength = 0\n    var maxMove = null\n    var maxStartRow = null\n    var maxStartCol = null\n    for (let row = 0; row < b.length; row++) {\n      for (let col = 0; col < b[0].length; col++) {\n        if (b[row][col] == 1) {\n          const moves = this.getMoves(color, row, col);\n          moves.push(...this.getJumps(color, row, col))\n          moves.forEach(\n            move => {\n              const [r, c] = move\n              const length = Math.abs(row - r) + Math.abs(col - c)\n              if (length > maxMoveLength) {\n                maxMove = move\n                maxMoveLength = length\n                maxStartRow = row\n                maxStartCol = col\n              }\n            }\n          )\n        }\n      }\n    }\n    this.setLocation({ color, row: maxStartRow, col: maxStartCol })\n    if (maxMove) {\n      const [row, col] = maxMove\n      this.moveCurr({ row, col })\n      this.resetSquare({ row: maxStartRow, col: maxStartCol })\n      this.switchTurns()\n    }\n  }\n\n  switchTurns = () => {\n    if (this.state.currMove == \"black\") {\n      this.setState({\n        currMove: \"red\"\n      })\n      setTimeout(this.makeAutoMove, 300);\n\n    } else {\n      this.setState({\n        currMove: \"black\"\n      })\n    }\n  }\n\n  setBoard = ({ val, row, col }) => {\n    row = parseInt(row);\n    col = parseInt(col);\n    val = parseInt(val);\n    var newArray = [];\n    for (var i = 0; i < this.state.board.length; i++) {\n      newArray[i] = this.state.board[i].slice();\n    }\n    newArray[row][col] = val;\n    if (Math.abs(row - this.state.selectedRow) > 1) {\n      const capturedPieces = this.getCaptured({\n        startRow: this.state.selectedRow,\n        startCol: this.state.selectedCol,\n        endRow: row,\n        endCol: col,\n        color: this.state.selectedColor\n      })\n      capturedPieces.forEach(piece => {\n        [row, col] = piece\n        newArray[row][col] = 0\n      }\n      )\n    }\n    this.setState({\n      board: newArray\n    });\n  };\n\n  colorMap = {\n    black: 2,\n    red: 1\n  };\n\n  moveCurr = ({ row, col }) => {\n    const { selectedColor } = this.state;\n    this.setBoard({ col, row, val: this.colorMap[selectedColor] });\n  };\n\n  setLocation = ({ color, row, col }) => {\n    row = parseInt(row);\n    col = parseInt(col);\n    this.setState({\n      selectedCol: col,\n      selectedRow: row,\n      selectedColor: color\n    });\n  };\n\n  resetSquare = () => {\n    this.setBoard({ val: 0, row: this.state.selectedRow, col: this.state.selectedCol });\n  };\n\n  resetHiglighted = () => {\n    this.setState({ highlighted: makeHighlighted() });\n  }\n\n  showSquares = ({ color, col, row }) => {\n    if (this.state.currMove != color) {\n      return\n    }\n    this.setLocation({ color, row, col });\n    var newArray = [];\n    for (var i = 0; i < this.state.highlighted.length; i++)\n      newArray[i] = this.state.highlighted[i].slice();\n    const moves = this.getMoves(color, row, col);\n    moves.push(...this.getJumps(color, row, col))\n    moves.forEach(move => {\n      const [r, c] = move;\n      newArray[r][c] = 1;\n    });\n    this.setState({ highlighted: newArray });\n  };\n\n  isInBounds = (r, c) => (\n    r >= 0 && c >= 0 && r < 8 && c < 8\n  )\n\n  getMoves = (color, row, col) => {\n    col = parseInt(col);\n    row = parseInt(row);\n    var moves = [];\n    const direction = color == \"black\" ? -1 : 1\n    const rows = [-1, 1];\n    rows.forEach(item => {\n      if (this.isInBounds(row + direction, col + item)) {\n        if (this.state.board[row + direction][col + item] == 0) {\n          moves.push([row + direction, col + item]);\n        }\n      }\n    });\n    return moves;\n  };\n\n  getJumps = (color, row, col) => {\n    col = parseInt(col);\n    row = parseInt(row);\n    const direction = (color == \"black\") ? -1 : 1\n    const oponnent = (color == \"black\") ? 1 : 2\n    const moves = []\n    const dfsUtil = (row, col, direction) => {\n      const jumps = [[direction, 1], [direction, -1]]\n      jumps.forEach(jumped => {\n        const [r, c] = jumped\n        const [jRow, jCol] = [row + r, col + c]\n        const [lRow, lCol] = [row + r * 2, col + c * 2]\n        if (this.isInBounds(jRow, jCol) && this.state.board[jRow][jCol] == oponnent) {\n          if (this.isInBounds(lRow, lCol) && this.state.board[lRow][lCol] == 0) {\n            moves.push([lRow, lCol]);\n            dfsUtil(lRow, lCol, direction)\n          }\n        }\n      })\n    }\n    dfsUtil(row, col, direction)\n    return moves;\n  };\n\n  getCaptured = ({ startRow, startCol, endRow, endCol, color }) => {\n    const direction = endRow > startRow ? 1 : -1\n    const oponnent = (color == \"black\") ? 1 : 2\n    var ans = []\n    var found = false\n    const dfsUtil = (row, col, direction, captured) => {\n      const jumps = [[direction, 1], [direction, -1]]\n      jumps.forEach(jumped => {\n        const [r, c] = jumped\n        const [jRow, jCol] = [row + r, col + c]\n        const [lRow, lCol] = [row + r * 2, col + c * 2]\n        if (this.isInBounds(jRow, jCol) && this.state.board[jRow][jCol] == oponnent) {\n          if (this.isInBounds(lRow, lCol) && this.state.board[lRow][lCol] == 0) {\n            if (found == true) { return }\n            captured.push([jRow, jCol]);\n            if (lRow == endRow && lCol == endCol) {\n              ans = captured.slice()\n              found = true\n              return\n            }\n            dfsUtil(lRow, lCol, direction, captured.slice())\n            if (found == true) { return }\n            captured.pop()\n          }\n        }\n      })\n    }\n    dfsUtil(startRow, startCol, direction, [])\n    return ans\n  }\n\n  makeBoard = () => {\n    let blackCounter = 0;\n    let redCounter = 0;\n    let retVal = [];\n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        const squareState = this.state.board[row][col];\n        switch (squareState) {\n          case -1:\n            retVal.push(\n              <div style={nonPlayableSquareStyle} key={[\"np\", row, col]}></div>\n            );\n            break;\n          default:\n            const checkerColor = squareState == 1 ? \"red\" : \"black\";\n            retVal.push(\n              <PlayableSquare\n                key={[row, col]}\n                row={row}\n                col={col}\n                style={playableSquareStyle}\n                moveCurr={this.moveCurr}\n                highlighted={this.state.highlighted[row][col]}\n                resetSquare={this.resetSquare}\n                resetHighlighted={this.resetSquare}\n                switchTurns={this.switchTurns}\n              >\n                {squareState > 0 ? (\n                  <Checker\n                    color={checkerColor}\n                    counter={\n                      checkerColor == \"red\" ? redCounter++ : blackCounter++\n                    }\n                    style={checkerStyle}\n                    row={row}\n                    col={col}\n                    showSquares={this.showSquares}\n                    resetSquare={this.resetSquare}\n                    resetHighlighted={this.resetHiglighted}\n                    currMove={this.state.currMove}\n                  ></Checker>\n                ) : null}\n              </PlayableSquare>\n            );\n            break;\n        }\n      }\n    }\n    return retVal;\n  };\n  render() {\n    return <BoardGrid>{this.makeBoard()}</BoardGrid>;\n  }\n}\n\nexport default Board\n","import React from \"react\";\nimport Board from \"./components/Board\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <Board></Board>\n      </DndProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}